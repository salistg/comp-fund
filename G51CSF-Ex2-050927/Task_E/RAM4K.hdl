// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    RAM512(in=in, address=address[0..8],out=out1, load=load1);
    RAM512(in=in, address=address[0..8],out=out2, load=load2);
    RAM512(in=in, address=address[0..8],out=out3, load=load3);
    RAM512(in=in, address=address[0..8],out=out4, load=load4);
    RAM512(in=in, address=address[0..8],out=out5, load=load5);
    RAM512(in=in, address=address[0..8],out=out6, load=load6);
    RAM512(in=in, address=address[0..8],out=out7, load=load7);
    RAM512(in=in, address=address[0..8],out=out8, load=load8);
    DMux8Way(in=load,sel=address[9..11],a=load1, b=load2, c=load3, d=load4, e=load5, f=load6, g=load7, h=load8);
    Mux8Way16(a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, sel=address[9..11], out=out);
    
}